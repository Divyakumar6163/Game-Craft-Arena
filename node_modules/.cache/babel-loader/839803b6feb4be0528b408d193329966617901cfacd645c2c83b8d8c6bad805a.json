{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\React Js Project\\\\Guess-the-Name-Game\\\\src\\\\components\\\\modal.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./modal.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal({\n  message,\n  leftAttempts,\n  finalScore,\n  object1,\n  object2,\n  object3,\n  attempts,\n  isRobot,\n  setModal,\n  setKey\n}) {\n  _s();\n  const navigate = useNavigate();\n  function handleRestart() {\n    if (!isRobot) navigate(\"/player1\");else {\n      setModal(false);\n      // navigate(\"/player2\");\n      history.replace(\"/player2\");\n    }\n  }\n  function handleLevel() {\n    navigate(\"/levels\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    open: true,\n    className: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: style.h1,\n      style: {\n        color: message === \"You Won\" ? \"green\" : \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), object1 !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: \"800\"\n      },\n      className: style.p,\n      children: [\"Object \", attempts > 8 ? null : 1, \": \", object1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), object2 !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: \"800\"\n      },\n      className: style.p,\n      children: [\"Object 2: \", object2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), object3 !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: \"800\"\n      },\n      className: style.p,\n      children: [\"Object 3: \", object3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.p,\n      children: [\"Attempts Left: \", leftAttempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.p,\n      children: [\"Score: \", finalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLevel,\n      className: style.button,\n      children: \"Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      className: style.button,\n      children: isRobot ? \"Home\" : \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["style","useNavigate","jsxDEV","_jsxDEV","Modal","message","leftAttempts","finalScore","object1","object2","object3","attempts","isRobot","setModal","setKey","_s","navigate","handleRestart","history","replace","handleLevel","open","className","modal","children","h1","color","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","p","onClick","button","_c","$RefreshReg$"],"sources":["D:/VS Code/React Js Project/Guess-the-Name-Game/src/components/modal.jsx"],"sourcesContent":["import style from \"./modal.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function Modal({\r\n  message,\r\n  leftAttempts,\r\n  finalScore,\r\n  object1,\r\n  object2,\r\n  object3,\r\n  attempts,\r\n  isRobot,\r\n  setModal,\r\n  setKey,\r\n}) {\r\n  const navigate = useNavigate();\r\n  function handleRestart() {\r\n    if (!isRobot) navigate(\"/player1\");\r\n    else {\r\n      setModal(false);\r\n      // navigate(\"/player2\");\r\n      history.replace(\"/player2\");\r\n    }\r\n  }\r\n  function handleLevel() {\r\n    navigate(\"/levels\");\r\n  }\r\n  return (\r\n    <dialog open className={style.modal}>\r\n      <h1\r\n        className={style.h1}\r\n        style={{ color: message === \"You Won\" ? \"green\" : \"red\" }}\r\n      >\r\n        {message}\r\n      </h1>\r\n      {object1 !== \"\" && (\r\n        <p style={{ fontWeight: \"800\" }} className={style.p}>\r\n          Object {attempts > 8 ? null : 1}: {object1}\r\n        </p>\r\n      )}\r\n      {object2 !== \"\" && (\r\n        <p style={{ fontWeight: \"800\" }} className={style.p}>\r\n          Object 2: {object2}\r\n        </p>\r\n      )}\r\n      {object3 !== \"\" && (\r\n        <p style={{ fontWeight: \"800\" }} className={style.p}>\r\n          Object 3: {object3}\r\n        </p>\r\n      )}\r\n      <p className={style.p}>Attempts Left: {leftAttempts}</p>\r\n      <p className={style.p}>Score: {finalScore}</p>\r\n      <button onClick={handleLevel} className={style.button}>\r\n        Level\r\n      </button>\r\n      <button onClick={handleRestart} className={style.button}>\r\n        {isRobot ? \"Home\" : \"Restart\"}\r\n      </button>\r\n    </dialog>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}